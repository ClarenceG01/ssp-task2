**SSP 2**
**INTRODUCTION**

1. FORM
   -allow user to order a book from the 3
   -enter the number of copies
2. APP
   -validates the user has selected a book and entered a legal number of copies
   -generates a "receipt page" that displays total cost of order. Include Tax
3. BOOKS
   -represent books in an array of objects
   -represent books in this format:
   var products=[
   {ISBN:"iufif",title:"ururur",price:"hcech",image_file="ncncnjcdjn"}
   ]
4. MODEL FUNCTIONS
   -function that returns the entire array of books
   -function that searches the array for one with provided ISBN

   **ARRAY AND FUNCTIONS IN DIFFERENT FILES, 3 FILES. ONE FOR ARRAY, TWO FRO FUNCTIONS**

**ORDER FORM**

- html form page
- url "/"
- Dropdown with the three books, user selects one
- Value field for each option should be their ISBN
- first dropdown option "Select a Book" with their value as 0 or "none"
- Number of copies

- pressing button should cause the form to be submitted to a function called order

**NODEJS APP**

- get ISBN and no. of copies from request when form is submitted
- ISBN and no. of copies should be validated. Return error if invalid
- use model function to search for the book corresponding to ISBN submitted. This gets its title and price.
- get total price. BookPrice _ no. of books _ tax
- render receipt page

**STEPS**

1. Extracting the Parameters

- get parameters from body
- store these(isbn and no. of copies) in request
- next()

2. Validate the Parameters

- if no book is selected, display "Must select a book". if isbn===0 ||isbn ==="none"
- if copies is blank, not a number or is less than 1, display "Must purchase at least one copy!"

**OTHERS**

- display error messages using response.end
- all validation is server side validation

**RECEIPTS**

- use res.end to send html page containing:(use text e.g, Thanks for ordering 6 copies of xxxx at $12 per copy, your total bill is $76436.55 with tax)
  • The book title
  • The book price.
  • The number of copies purchased.
  • The total order cost.

**ERROR HANDLING**

- non-existent page "\*". "File Not Found"
- any other error.res.status(404). "Server Error."

**ASSIGNMENT 3**

_View Books Page_
-home page for site
-displays the three books in a table
-same page is displayed when View Books is clicked
-books are dynamically generated from calling the function

-each book: title, price, cover image
-pass list of books to handlebars view that loops to display each book

_Book order page_
-transform order form to handlebars view
-books in form are dynamic from function, use them in options, using ISBN of book as the option value, and title
-add first option, outside the loop, with value 'none' or 0, "Select a book"

_Order Receipt_
-should display as table:
• An image of the book cover.
• The title of the book.
• The price of the book.
• The number of copies ordered.
• The total price including tax (as in the previous assignment).

_Validation_
-user must select a book
-user must enter a legal value for the number of copies

-these errors are displayed on the same page:
•create a list of errors found during validation
•if error, redisplay the order page passing the errors
•The order page should have conditional outputs for the messages, displayed if that particular error value is true in the list.

**All validation on server side**
**Echoing the number of copies not understood**
